local Players = game:GetService("Players")
local PathfindingService = game:GetService("PathfindingService")
local RunService = game:GetService("RunService")

local localPlayer = Players.LocalPlayer
local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local hrp = character:WaitForChild("HumanoidRootPart")

local pathParams = {
	AgentRadius = 2,
	AgentHeight = 5,
	AgentCanJump = true,
	AgentCanClimb = true,
	WaypointSpacing = 2,
}
local path = PathfindingService:CreatePath(pathParams)

local function getNearestPlayer()
	local closest, minDist = nil, math.huge
	for _, plr in pairs(Players:GetPlayers()) do
		if plr ~= localPlayer and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
			local theirHRP = plr.Character.HumanoidRootPart
			local dist = (theirHRP.Position - hrp.Position).Magnitude
			if dist < minDist and dist <= 1000 then
				closest = theirHRP
				minDist = dist
			end
		end
	end
	return closest
end

local function moveToTarget(targetPos)
	path:ComputeAsync(hrp.Position, targetPos)

	if path.Status == Enum.PathStatus.Success then
		local waypoints = path:GetWaypoints()
		for _, waypoint in ipairs(waypoints) do
			if waypoint.Action == Enum.PathWaypointAction.Jump then
				humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
			end

			humanoid:MoveTo(waypoint.Position)
			local reached = humanoid.MoveToFinished:Wait()
			if not reached then
				break
			end
		end
	else
		warn("Tangina, walang matinong path.")
	end
end

-- Recalculate path every few seconds
task.spawn(function()
	while true do
		local target = getNearestPlayer()
		if target then
			moveToTarget(target.Position)
		end
		task.wait(0.0)
	end
end)
